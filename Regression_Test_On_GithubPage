import { Selector } from 'testcafe';
import { pick } from 'lodash';

fixture `GitHub`.page `https://github.com`;

	const developerNameInput = Selector('#login_field');
	const developerPasswordInput = Selector('#password');
	const newRepository = Selector('#repository_name');
	const fileName = Selector('.js-blob-filename');
	const commitNewFile = Selector('#commit-summary-input');
	const repositoryToDelete = Selector('.input-block');

test(`Click Sign In`, async t => {
    await t.maximizeWindow();//Maximize the window
    await t.click(Selector('a.HeaderMenu-link').withText('Sign\u00a0in'));//Click the sign in link on the page
    await t.wait(3000); 
    
    await t.typeText(developerNameInput, 'maeeshamaliha22', { caretPos: 0 })//Username input
    await t.typeText(developerPasswordInput, 'Aiubcse123', { caretPos: 0 })//password input
    await t.expect(developerNameInput.value).contains('maeeshamaliha22', 'input contains text "maeeshamaliha22"');//verify the username
    await t.expect(developerPasswordInput.value).contains('Aiubcse123', 'input contains text "Aiubcse123"');//verify the password
    await t.click(Selector('.btn'));//click sign in button
    
    await t.click(Selector('.dropdown-caret'));//click '+' button
    await t.click(Selector('.dropdown-item'));//click New repository
    await t.typeText(newRepository, 'testcafe');//sselect the textbox and writting the repository name
    await t.wait(3000);// wait for checking the repository name
    await t.click(Selector('.btn').withText('Create repository'));//click create respository button
    
    await t.click(Selector('a').withText('creating a new file'));//click "creating a new file"
    await t.typeText(fileName,'test');//file name input
    await t.wait(2000);
    await t.typeText(commitNewFile, 'created new file');//commit summary
    await t.click(Selector('#submit-file'));//commit button click
    
    await t.click(Selector('.js-selected-navigation-item').withText('Settings'));//click settings button
    await t.click(Selector('.btn').withText('Delete this repository'));//click delete this repository
    await t.typeText(repositoryToDelete,'testcafe', { caretPos: 0 });//type the respository name to delete
    await t.click(Selector('.btn-danger'));//click button to delete the repository
    await t.wait(3000);
   
 
});
